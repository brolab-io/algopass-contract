{
    "hints": {
        "init_profile(pay,string,string,(string,string)[])bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "update_profile(string,(string,string)[])(string,string,(string,string)[])": {
            "structs": {
                "output": {
                    "name": "UserRecord",
                    "elements": [
                        [
                            "name",
                            "string"
                        ],
                        [
                            "bio",
                            "string"
                        ],
                        [
                            "urls",
                            "(string,string)[]"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_profile(address)(string,string,(string,string)[])": {
            "read_only": true,
            "structs": {
                "output": {
                    "name": "UserRecord",
                    "elements": [
                        [
                            "name",
                            "string"
                        ],
                        [
                            "bio",
                            "string"
                        ],
                        [
                            "urls",
                            "(string,string)[]"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "remove_profile()bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "update_fee(uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "hello(string)string": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 2
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "g_counter": {
                    "type": "uint64",
                    "key": "g_counter",
                    "descr": "For user counter"
                },
                "g_fee": {
                    "type": "uint64",
                    "key": "g_fee",
                    "descr": "Fee to create profile"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "algopass",
        "methods": [
            {
                "name": "init_profile",
                "args": [
                    {
                        "type": "pay",
                        "name": "payment"
                    },
                    {
                        "type": "string",
                        "name": "name"
                    },
                    {
                        "type": "string",
                        "name": "bio"
                    },
                    {
                        "type": "(string,string)[]",
                        "name": "urls"
                    }
                ],
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "update_profile",
                "args": [
                    {
                        "type": "string",
                        "name": "bio"
                    },
                    {
                        "type": "(string,string)[]",
                        "name": "urls"
                    }
                ],
                "returns": {
                    "type": "(string,string,(string,string)[])"
                }
            },
            {
                "name": "get_profile",
                "args": [
                    {
                        "type": "address",
                        "name": "user"
                    }
                ],
                "returns": {
                    "type": "(string,string,(string,string)[])"
                }
            },
            {
                "name": "remove_profile",
                "args": [],
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "update_fee",
                "args": [
                    {
                        "type": "uint64",
                        "name": "fee"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "hello",
                "args": [
                    {
                        "type": "string",
                        "name": "name"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "delete_application": "CALL",
        "no_op": "CREATE",
        "update_application": "CALL"
    }
}